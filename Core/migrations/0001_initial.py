# Generated by Django 5.0.2 on 2025-05-20 01:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asignatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('codigo', models.CharField(max_length=50)),
                ('dia', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miércoles', 'Miércoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes')], max_length=15)),
                ('horario', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='CalendarioColegio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_actividad', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('encargado', models.CharField(max_length=100)),
                ('ubicacion', models.CharField(max_length=100)),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Clase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('sala', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_profesor_jefe', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido_paterno', models.CharField(max_length=100)),
                ('apellido_materno', models.CharField(max_length=100)),
                ('rut', models.CharField(max_length=10, unique=True)),
                ('div', models.CharField(max_length=1)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('telefono', models.CharField(max_length=15)),
                ('direccion', models.TextField()),
                ('fecha_nacimiento', models.DateField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('activador', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarioClase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_actividad', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('materiales', models.TextField(blank=True, null=True)),
                ('lista_materiales', models.JSONField(blank=True, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('hora', models.TimeField(blank=True, null=True)),
                ('asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.asignatura')),
            ],
        ),
        migrations.AddField(
            model_name='asignatura',
            name='clase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Core.clase'),
        ),
        migrations.AddField(
            model_name='clase',
            name='profesor_jefe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clases_jefe', to='Core.docente'),
        ),
        migrations.AddField(
            model_name='asignatura',
            name='docente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Core.docente'),
        ),
        migrations.CreateModel(
            name='Electivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('sala', models.CharField(max_length=50)),
                ('dia', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miércoles', 'Miércoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes')], max_length=15)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.asignatura')),
                ('profesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.docente')),
            ],
            options={
                'unique_together': {('profesor', 'dia', 'hora_inicio', 'hora_fin')},
            },
        ),
        migrations.AddField(
            model_name='docente',
            name='especialidad',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Core.especialidad'),
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contacto_emergencia', models.CharField(max_length=100)),
                ('clase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estudiantes', to='Core.clase')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Core.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='ChatGrupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('fecha_creacion', models.DateField(auto_now_add=True)),
                ('hora_creacion', models.TimeField(auto_now_add=True)),
                ('asignatura', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.asignatura')),
                ('docentes', models.ManyToManyField(blank=True, related_name='chats_grupo', to='Core.docente')),
                ('estudiantes', models.ManyToManyField(blank=True, related_name='chats_grupo', to='Core.estudiante')),
            ],
        ),
        migrations.CreateModel(
            name='Asistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('asistencia', models.BooleanField()),
                ('asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.asignatura')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.estudiante')),
            ],
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_evaluacion', models.CharField(choices=[('Prueba', 'Prueba'), ('Tarea', 'Tarea'), ('Examen', 'Examen'), ('Proyecto', 'Proyecto')], max_length=20)),
                ('nota', models.DecimalField(decimal_places=2, max_digits=5)),
                ('puntaje_obtenido', models.DecimalField(decimal_places=2, max_digits=5)),
                ('puntaje_total', models.DecimalField(decimal_places=2, max_digits=5)),
                ('fecha', models.DateField()),
                ('asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.asignatura')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.estudiante')),
            ],
        ),
        migrations.CreateModel(
            name='MensajeAlumnoProfesor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('contenido', models.TextField()),
                ('fecha', models.DateField(auto_now_add=True)),
                ('hora', models.TimeField(auto_now_add=True)),
                ('emisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes_enviados', to='Core.usuario')),
                ('receptores', models.ManyToManyField(related_name='mensajes_recibidos', to='Core.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Foro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('asunto', models.CharField(max_length=200)),
                ('contenido', models.TextField()),
                ('fecha', models.DateField(auto_now_add=True)),
                ('hora', models.TimeField(auto_now_add=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.usuario')),
            ],
        ),
        migrations.AddField(
            model_name='docente',
            name='usuario',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Core.usuario'),
        ),
        migrations.CreateModel(
            name='Administrativo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rol', models.CharField(choices=[('ADMINISTRADOR', 'Administrador Máximo'), ('ADMINISTRATIVO', 'Administrativo')], max_length=15)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Core.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('rut', models.CharField(max_length=20, unique=True)),
                ('div', models.CharField(max_length=1)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.AddField(
            model_name='usuario',
            name='auth_user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ClaseAsignatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('dia', models.CharField(max_length=10)),
                ('curso', models.CharField(max_length=50)),
                ('asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.asignatura')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.docente')),
            ],
            options={
                'unique_together': {('docente', 'dia', 'hora_inicio', 'hora_fin', 'curso')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='asignatura',
            unique_together={('docente', 'dia', 'horario')},
        ),
        migrations.CreateModel(
            name='InscripcionElectivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inscripcion', models.DateTimeField(auto_now_add=True)),
                ('electivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones', to='Core.electivo')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electivos', to='Core.estudiante')),
            ],
            options={
                'unique_together': {('estudiante', 'electivo')},
            },
        ),
    ]
