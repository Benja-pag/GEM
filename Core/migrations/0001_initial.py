# Generated by Django 5.2.1 on 2025-06-05 00:24

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asignatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('nivel', models.PositiveSmallIntegerField(choices=[(1, '1°'), (2, '2°'), (3, '3°'), (4, '4°')])),
                ('es_electivo', models.BooleanField(default=False, help_text='Marca si la asignatura es de tipo electivo')),
            ],
        ),
        migrations.CreateModel(
            name='CalendarioColegio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_actividad', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('encargado', models.CharField(max_length=100)),
                ('ubicacion', models.CharField(max_length=100)),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ChatGrupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Foro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('asunto', models.CharField(max_length=200)),
                ('contenido', models.TextField()),
                ('fecha', models.DateField(auto_now_add=True)),
                ('hora', models.TimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('rut', models.CharField(max_length=20, unique=True)),
                ('div', models.CharField(max_length=1)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='AsignaturaImpartida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Ej: MAT_101, BIO-2, HIS01', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='El código solo puede contener letras, números, guiones (-) y guiones bajos (_).', regex='^[A-Za-z0-9_-]+$')])),
                ('asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imparticiones', to='Core.asignatura')),
            ],
        ),
        migrations.CreateModel(
            name='CalendarioClase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_actividad', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('materiales', models.TextField(blank=True, null=True)),
                ('lista_materiales', models.JSONField(blank=True, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('hora', models.TimeField(blank=True, null=True)),
                ('asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.asignatura')),
            ],
        ),
        migrations.CreateModel(
            name='Clase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.CharField(choices=[('LUNES', 'Lunes'), ('MARTES', 'Martes'), ('MIERCOLES', 'Miércoles'), ('JUEVES', 'Jueves'), ('VIERNES', 'Viernes')], max_length=10)),
                ('horario', models.CharField(help_text='Ej: 08:00-09:30', max_length=100)),
                ('sala', models.CharField(choices=[('SALA_1', 'Sala 1'), ('SALA_2', 'Sala 2'), ('SALA_3', 'Sala 3'), ('SALA_4', 'Sala 4'), ('SALA_5', 'Sala 5'), ('SALA_6', 'Sala 6'), ('SALA_7', 'Sala 7'), ('SALA_8', 'Sala 8'), ('LAB_COMP', 'Laboratorio de Computación'), ('LAB_CIEN', 'Laboratorio de Ciencias'), ('GIMNASIO', 'Gimnasio'), ('BIBLIOTECA', 'Biblioteca'), ('AUDITORIO', 'Auditorio')], help_text='Sala donde se impartirá la clase', max_length=20)),
                ('asignatura_impartida', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clases', to='Core.asignaturaimpartida')),
            ],
        ),
        migrations.CreateModel(
            name='ChatClase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('clase', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chat', to='Core.clase')),
            ],
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.PositiveSmallIntegerField(choices=[(1, '1°'), (2, '2°'), (3, '3°'), (4, '4°')])),
                ('letra', models.CharField(choices=[('A', 'A'), ('B', 'B')], max_length=1)),
            ],
            options={
                'unique_together': {('nivel', 'letra')},
            },
        ),
        migrations.AddField(
            model_name='clase',
            name='curso',
            field=models.ForeignKey(blank=True, help_text='Opcional para asignaturas electivas donde se mezclan cursos', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clases', to='Core.curso'),
        ),
        migrations.CreateModel(
            name='EvaluacionBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('ponderacion', models.DecimalField(decimal_places=2, help_text='Porcentaje que representa esta evaluación (Ej: 20.00)', max_digits=5)),
                ('asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluaciones_base', to='Core.asignatura')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('clase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluaciones', to='Core.clase')),
                ('evaluacion_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluaciones', to='Core.evaluacionbase')),
            ],
        ),
        migrations.CreateModel(
            name='HorarioCurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bloque', models.CharField(choices=[('1', '08:00 - 08:45'), ('2', '08:45 - 09:30'), ('RECREO1', '09:30 - 09:45'), ('3', '09:45 - 10:30'), ('4', '10:30 - 11:15'), ('RECREO2', '11:15 - 11:30'), ('5', '11:30 - 12:15'), ('6', '12:15 - 13:00'), ('ALMUERZO', '13:00 - 13:45'), ('7', '13:45 - 14:30'), ('8', '14:30 - 15:15'), ('9', '15:15 - 16:00')], max_length=8)),
                ('dia', models.CharField(choices=[('LUNES', 'Lunes'), ('MARTES', 'Martes'), ('MIERCOLES', 'Miércoles'), ('JUEVES', 'Jueves'), ('VIERNES', 'Viernes')], max_length=10)),
                ('actividad', models.CharField(choices=[('CLASE', 'Clase'), ('RECREO', 'Recreo'), ('ALMUERZO', 'Almuerzo')], max_length=8)),
            ],
            options={
                'unique_together': {('bloque', 'dia')},
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('rut', models.CharField(max_length=20, unique=True)),
                ('div', models.CharField(max_length=1)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido_paterno', models.CharField(max_length=100)),
                ('apellido_materno', models.CharField(max_length=100)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('telefono', models.CharField(max_length=20)),
                ('direccion', models.TextField()),
                ('fecha_nacimiento', models.DateField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('activador', models.BooleanField(default=True)),
                ('password', models.CharField(max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='Core.usuario')),
                ('es_profesor_jefe', models.BooleanField(default=False)),
                ('especialidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Core.especialidad')),
            ],
        ),
        migrations.CreateModel(
            name='MensajeForo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenido', models.TextField()),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('foro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes', to='Core.foro')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='MensajeChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenido', models.TextField()),
                ('fecha_envio', models.DateTimeField(auto_now_add=True)),
                ('chat_clase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mensajes', to='Core.chatclase')),
                ('chat_grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mensajes', to='Core.chatgrupo')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.usuario')),
            ],
        ),
        migrations.AddField(
            model_name='foro',
            name='autor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.usuario'),
        ),
        migrations.AddField(
            model_name='chatgrupo',
            name='participantes',
            field=models.ManyToManyField(related_name='chats_grupales', to='Core.usuario'),
        ),
        migrations.CreateModel(
            name='Administrativo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rol', models.CharField(choices=[('ADMINISTRADOR', 'Administrador Máximo'), ('ADMINISTRATIVO', 'Administrativo')], max_length=15)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Core.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='ProfesorJefe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_asignacion', models.DateField(auto_now_add=True)),
                ('curso', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jefatura_actual', to='Core.curso')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jefaturas', to='Core.docente')),
            ],
        ),
        migrations.AddField(
            model_name='asignaturaimpartida',
            name='docente',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asignaturas_impartidas', to='Core.docente'),
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='Core.usuario')),
                ('contacto_emergencia', models.CharField(max_length=100)),
                ('curso', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estudiantes', to='Core.curso')),
            ],
        ),
        migrations.CreateModel(
            name='Asistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('presente', models.BooleanField(default=False)),
                ('justificado', models.BooleanField(default=False)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('clase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='Core.clase')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='Core.estudiante')),
            ],
            options={
                'unique_together': {('clase', 'estudiante')},
            },
        ),
        migrations.CreateModel(
            name='AsignaturaInscrita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inscripcion', models.DateTimeField(default=django.utils.timezone.now)),
                ('validada', models.BooleanField(default=False, help_text='Si la inscripción fue confirmada por el sistema o administración')),
                ('asignatura_impartida', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones', to='Core.asignaturaimpartida')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaturas_inscritas', to='Core.estudiante')),
            ],
            options={
                'unique_together': {('estudiante', 'asignatura_impartida')},
            },
        ),
        migrations.CreateModel(
            name='AlumnoEvaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.DecimalField(decimal_places=2, help_text='Nota del estudiante (Ej: 6.50)', max_digits=4)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultados', to='Core.evaluacion')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas', to='Core.estudiante')),
            ],
            options={
                'unique_together': {('estudiante', 'evaluacion')},
            },
        ),
    ]
